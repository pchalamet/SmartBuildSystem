name: .NET Core

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # checkout source code
    - uses: actions/checkout@v1

    # setup .net core
    - name: info
      run: echo '${{ github.ref }}'
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    # build
    - name: Build
      run: make publish config=Release

  publish:
    if: contains(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
    # create a github release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    # push assets
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./out/win10.zip
        asset_name: win10.zip
        asset_content_type: application/zip

    # push assets
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./out/osx.zip
        asset_name: osx.zip
        asset_content_type: application/zip
